Authentification en 3 phases : Il faut récupérer un tuple pseudo/tag de tous les utilisateurs connectés
Pourquoi des tags pour identifier : un user peut changer de nom sans problèmes,
( c'est aussi plus simple de communiquer avec des tailles fixes plutôt
qu'avec des pseudos dont la taille change selon l'user )
tag sous forme décimale c'est plus simple pour générer et traiter des entiers que des chaînes de caractère (longue et de taille variable) qui peuvent changer

§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
RÈGLES À SUIVRE POUR LA CRÉATION DE TAG
tag_server > 0
tag_usr > 0
tag_server tag_chan=0 : channel général créé avec le serveur

tag_server tag_chan	: 15 250, 3 30, 1 1, ...
0 tag_usr 	: 0 32, 0 5037, 0 1, ...

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

le buffer de réception et d'envoi doit être de taille 4096
les cmd doivent se finir par un '\r\n'

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	/* création d'un nouveau compte/channel/serveur */
	C -> S : NEW USR pseudo password
	C -> S : NEW CHAN tag_server chan_name
	C -> S : NEW SERV server_name

	/* connexion à un compte */
	C -> S : IAM pseudo password

	/* réponse à une connexion/création par le tag du client/channel/serveur */
	S -> C : TAG 0 tag_usr
	S -> C : TAG tag_server tag_chan chan_name
	S -> C : TAG tag_server 0 server_name

	/* informer tout les connectés de l'arrivé de pseudo/tag_usr */
	/* envoyer à l'arrivant les associations pseudo/tag_usr et statut de tout le monde */
	S -> C : ADD ON 0 tag_usr pseudo
	S -> C : ADD OFF 0 tag_usr pseudo

	/* se déconnecter / quitter un channel/serveur */
	C -> S : BYE
	C -> S : BYE tag_server tag_chan
	C -> S : BYE tag_server 0

	/* informer soi-même/tout le monde que tag_usr est déconnecté / a quitté le channel/serveur */
	S -> C : BYE
	S -> C : BYE 0 tag_usr
	S -> C : BYE 0 tag_usr tag_server tag_chan
	S -> C : BYE 0 tag_usr tag_server 0

	/* un modérateur du channel/serveur le supprime */
	C -> S : DEL tag_server tag_chan
	C -> S : DEL tag_server 0

	/* informer tout le monde que channel/serveur est supprimé */
	S -> C : DEL tag_server tag_chan
	S -> C : DEL tag_server 0

	/* envoi la liste d'ami du compte associé au premier tag_usr */
	S -> C : GRP 0 tag_usr 0 tag_usr 0 tag_usr 0 tag_usr ...

	/* envoi la liste des membres du channel associé au premier tag_chan */
	S -> C : GRP tag_server tag_chan name_server name_chan 0 tag_usr 0 tag_usr 0 tag_usr ...

	/* envoyer un message à une personne/channel */
	C -> S : MSG 0 tag_usr_dest message
	C -> S : MSG tag_server tag_chan_dest message

	/* notification au.x destinataire.s du message d'une personne/channel */
	S -> C : MSG 0 tag_usr_src 0 tag_usr_dest message
	S -> C : MSG 0 tag_usr_src tag_server tag_chan_src message

	/* notification à l'envoyeur de l'envoi de son message à une personne/channel */
	S -> C : MSG 0 tag_usr_src 0 tag_usr_dest message
	S -> C : MSG 0 tag_usr_src tag_server tag_chan_src message

	/* envoi demande d'ami / invitation à un channel */
	C -> S : INV 0 tag_usr_dest
	C -> S : INV 0 tag_usr_dest tag_server tag_chan

	/* réception demande d'ami / invitation à un channel */
	S -> C : INV 0 tag_usr_src
	S -> C : INV 0 tag_usr_src tag_server tag_chan nom_serv nom_chan

	/* notification à l'envoyeur de l'envoi de son invitation ami/channel */
	S -> C : INV 0 tag_usr_src 0 tag_usr_dest
	S -> C : INV 0 tag_usr_src 0 tag_usr_dest tag_server tag_chan nom_serv nom_chan

	/* notification lors de la connexion des invitations émises en attente */
	S -> C : SENT 0 tag_usr_src
	S -> C : SENT 0 tag_usr_src tag_server tag_chan nom_serv nom_chan

	/* accepter l'invitation channel/ami */
	C -> S : JOIN tag_server tag_chan
	C -> S : JOIN 0 tag_usr_src

	/* notification de l'arrivé d'un nouveau membre dans le channel / demande d'ami accepté */
	/* JOIN sert de confirmation à l'envoyeur pour les demandes d'ami */
	/* GRP sert de confirmation à l'envoyeur pour les channels */
	S -> C : JOIN tag_server tag_chan 0 tag_usr_dest
	S -> C : JOIN 0 tag_usr_src 0 tag_usr_dest

	/* changer de mot de passe */
	C -> S : PSW old_password new_password
	S -> C : PSW new_password

	/* changer le pseudo d'un client */
	C -> S : PSD new_pseudo password

	/* changer le nom d'un channel/serveur par un modérateur uniquement */
	C -> S : RENAME new_name tag_server tag_chan
	C -> S : RENAME new_name tag_server

	/* notification à tous les membres du changement de nom d'un channel/serveur/client */
	S -> C : RENAME new_name tag_server tag_chan
	S -> C : RENAME new_name tag_server
	S -> C : RENAME new_pseudo 0 tag_usr

	/* signal une erreur */
	S -> C : ERR message

	/* arrêter le serveur */
	S -> S : EXT

	/* demander l'historique des messages privés/channels */
	C -> S : GET 0 tag_usr
	C -> S : GET tag_server tag_channel

	/* demander un fichier présent dans un message privés/channels */
	/* 'nom_fichier' doit être unique à la conversation */
	C -> S : GET 0 tag_usr nom_fichier
	C -> S : GET tag_server tag_channel nom_fichier

	/* commande pour informer qu'un fichier va être transmit */
	/* 'nom_fichier_tmp' est un identifiant temporaire */
	/* 'nom_fichier' doit être unique à la conversation si il s'agit d'une sauvegarde le nom_fichier est : save.txt */
	/* cela ne veut pas forcément dire que l'on doit enregistrer le fichier de sauvegarde sous ce nom */
	C -> S : NEWFILE tag_server tag_dest nom_fichier_tmp taille_fichier_bytes
	S -> C : NEWFILE tag_server tag_dest nom_fichier taille_fichier_bytes

	/* nofication d'acceptation du NEWFILE par le serveur */
	S -> C : NEWFILE OK

	/* commande pour envoyer les trames du fichier qu'on a dit qu'on enverrait  */
	/* 'nom_fichier_tmp' est un identifiant temporaire */
	/* 'nom_fichier' doit être unique à la conversation si il s'agit d'une sauvegarde le nom_fichier est : save.txt */
	/* cela ne veut pas forcément dire que l'on doit enregistrer le fichier de sauvegarde sous ce nom */
	/* les trame_binaire_fichier doivent être encodées en base64 */
	C -> S : FILE tag_server tag_dest nom_fichier_tmp trame_binaire_fichier
	S -> C : FILE tag_server tag_dest nom_fichier trame_binaire_fichier

	/* nofication d'acceptation du FILE par le serveur */
	S -> C : FILE OK

	/* notification de fin d'envoi du fichier */
	/* 'nom_fichier_tmp' est un identifiant temporaire */
	/* 'nom_fichier' doit être unique à la conversation si il s'agit d'une sauvegarde le nom_fichier est : save.txt */
	/* cela ne veut pas forcément dire que l'on doit enregistrer le fichier de sauvegarde sous ce nom */
	C -> S : ENDFILE tag_server tag_dest nom_fichier_tmp taille_fichier_bytes
	S -> C : ENDFILE tag_server tag_dest nom_fichier taille_fichier_bytes

	/* nofication d'acceptation du ENDFILE par le serveur */
	S -> C : ENDFILE OK

	/* nofication aux membres d'une conversation de l'envoi d'un fichier */
	/* pas nécessaire (mais pratique) de notifier l'envoyeur il reçoit ENDFILE */
	/* ce notification déclanchera un GET du client destinataire */
	/* 'nom_fichier' doit être unique à la conversation */
	S -> C : FILESENT 0 tag_usr_src nom_fichier
	S -> C : FILESENT 0 tag_usr_src tag_server tag_chan_dest nom_fichier

	/* notification à l'envoyeur de l'envoi de son fichier à une conversation */
	S -> C : FILESENT 0 tag_usr_src 0 tag_usr_dest nom_fichier
	S -> C : FILESENT 0 tag_usr_src tag_server tag_chan_dest nom_fichier

	/* struct d'une save de messages */
	/* métadonnées de coversation */
	+ tag_server tag_chan
	+ 0 tag_usr 0 tag_usr
	/* métadonnées du message */
	# 0 tag (J)J (M)M (A)A (H)H (M)M (S)S
	/* contenu du message */
	> message
	/* nom du fichier unique donné par le serveur*/
	* nom_fichier

			EX:
			+ 0 0
			# 0 15 10 (0)4 19 13 42 17
			> salut les gens ! :D
			# 0 2 10 (0)4 19 13 45 (0)3
			> salut gros !
			# 0 15 10 (0)4 19 15 (0)2 37
			* 135.png

	/* implémentation de jeu */
	C -> S : JEU id_jeu protocole_jeu
	S -> C : JEU id_jeu protocole_jeu

*******************************
COMMENT KON STOCK LES CONVERSATIONS
*******************************

*******************************
LES BASES :
	MENTIONS DE GENS (CÔTÉ CLIENT UNIQUEMENT)
	FICHIERS
	IMAGES

LES PLUS :
	GIF
	MESSAGE VOCAL

LES PLUS PLUS (ON SE MET GRAVE BIEN) :
	PRIVACY - PGP
	TELECHARGEMENT PAR P2P
	CHAT VOCAL / WEBCAM / VIDÉO-CONF
	PARTAGE D'ÉCRAN
	AJOUT DE MINI-JEUX (roulette, jeux de cartes/casino, ...)
*******************************