Authentification en 3 phases : Il faut récupérer un tuple pseudo/tag de tous les utilisateurs connectés
Pourquoi des tags pour identifier : un user peut changer de nom sans problèmes,
c'est aussi plus simple de communiquer avec des tailles fixes plutôt
qu'avec des pseudos dont la taille change selon l'user

§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
RÈGLES À SUIVRE POUR LA CRÉATION DE TAG

tag_chan	: multiple de 10 - 250, 30, ...
tag_usr 	: non multiple de 10 - 32, 5037, 1, ...

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§

	/* création d'un nouveau compte/channel/serveur */
	C -> S : NEW pseudo password
	C -> S : NEW tag_server.chan_name
	C -> S : NEW tag_server.0

	/* connexion à un compte */
	C -> S : IAM pseudo password

	/* réponse à une connexion/création par le tag du client/channel */
	S -> C : UAR 0.tag_usr
	S -> C : UAR tag_server.tag_chan

	/* informer tout les connectés de l'arrivé de pseudo/tag_usr */
	/* envoyer à l'arrivant les associations pseudo/tag_usr des connectés */
	S -> C : ADD 0.tag_usr pseudo

	/* informer le créateur du tag_chan créer */
	S -> C : ADD tag_server.tag_chan chan_name

	/* informer tout le monde que $(tag) est déconnecté */
	S -> C : BYE 0.tag_usr

	/* le créateur du channel le supprime */
	C -> S : BYE tag_server.tag_chan

	/* se déconnecter */
	C -> S : BYE

	/* envoi la liste d'ami du compte associé au premier tag_usr */
	S -> C : GRP 0.tag_usr 0.tag_usr 0.tag_usr 0.tag_usr ...

	/* envoi la liste des membres du channel associé au premier tag_chan */
	S -> C : GRP tag_server.tag_chan 0.tag_usr 0.tag_usr 0.tag_usr ...

	/* envoyer un message à une personne/channel */
	C -> S : MSG 0.tag_usr_dest message
	C -> S : MSG tag_server.tag_chan_dest message

	/* recevoir un message d'une personne/channel */
	S -> C : MSG 0.tag_usr_src message
	S -> C : MSG tag_server.tag_chan_src message

	/* envoi demande d'ami / invitation à un channel */
	C -> S : INV tag_server.tag_chan 0.tag_usr_dest
	C -> S : INV 0.tag_usr_src 0.tag_usr_dest

	/* réception demande d'ami / invitation à un channel */
	S -> C : INV tag_server.tag_chan nom_chan 0.tag_usr_src
	S -> C : INV 0.tag_usr_src

	/* accepter l'invitation channel/ami */
	C -> S : JOIN tag_server.tag_chan
	C -> S : JOIN 0.tag_urs_src

	/* notification de l'arrivé d'un nouveau membre dans le channel */
	S -> C : JOIN 0.tag_usr_dest

	/* changer de mot de passe */
	C -> S : PSW password new_password
	S -> C : PSW new_password

	/* changer de pseudo */
	C -> S : PSD password new_pseudo

	/* notification à tous du changement de pseudo */
	S -> C : PSD 0.tag_usr new_pseudo

	/* changer le nom d'un channel par créateur uniquement */
	C -> S : RENAME tag_server.tag_chan new_name

	/* notification à tous les membres du changement de nom */
	S -> C : RENAME tag_server.tag_chan new_name

	/* test de présence toute les 30 sec */
	S -> C : TIC
	C -> S : TOC

	/* signal une erreur */
	S -> C : ERR message

	/* arrêter le serveur */
	S -> S : EXT

	/* implémentation de jeu */
	C -> S : JEU id_jeu protocole_jeu
	S -> C : JEU id_jeu protocole_jeu

*******************************
COMMENT KON STOCK LES CONVERSATIONS
Méthode syncro
Méthode envoi aux non hors-ligne
*******************************

Les tags channels sont identifiés par leur premier bit commençant par 0 (sujet a changement)

A ajouter :
	envoi de fichiers
	ajout de plusieurs mini jeux (roulette, jeux de cartes/casino, )

	*******************************
	PRIVACY - PGP
	IMAGE
	GIF
	FICHIERS
	TELECHARGEMENT PAR P2P
	SON
	CHAT VOCAL / WEBCAM / VIDÉO-CONF
	PARTAGE D'ÉCRAN
	MENTIONS DE GENS
	*******************************
